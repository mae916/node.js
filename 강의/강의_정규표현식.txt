abc - 문자열을 포함한다
[abc] - 문자클래스 - 문자집합안에 특정 문자 한개
[^abc] - 부정문자클래스 : 문자 집합안의 특정 문자 한개
[a-z] - 두 문자 사이의 모든 문자
.  - 줄 바꿈 문자를 제외한 문자 한개
\d - 모든 숫자[0-9]와 같음
\D - 숫자를 제외한 모든 문자 한개 [^0-9]와 같음
\w - 임의의 영어 단어 문자(알파벳, 숫자, 언더스코어) 한개
\W - 영어단어 문자(알파벳, 숫자, 언더스코어)를 제외한 문자 한개
\s  - 모든 공백 문자 한 개
\S  - 공백문자가 아닌 문자 한개

x{2,4} - x를 최소 2번, 최대 4번 반복
x{2,} - x를 2번 잇ㅇ 반복
x?  - x를 한번 이하 반복
x+ - x를 한번 이상 반복
x* - x를 0번 이상 반복
(x) - x를 그룹화(부분 정규 표현식)
^ - 문자열의 시작 위치
$ - 문자열의 마지막 위치
x|y|z - x,y,z 중 하나(선택)

정규표현식 플래그
i - 대문자와 소문자를 구별하지 않는다
g - 전역 검색한다. 처음뿐만 아니라 일치하는 모든 것을 검색한다
m - 여러 줄 모드로 검색한다

------------------------------------------------------------------

정규표현식
  패턴으로 문자열을 찾거나 변경

  RegExp 생성자
  new RegExp

  /패턴/ -> 정규 표현식 객체 생성

        .test(패턴을 체크할 문자열)
              - 패턴의 일치여부 (true, false)
        .exec(패턴을 체크할 문자열)
        - 패턴에 일치하는 문자열을 추출

  /문자열/ -> 문자열이 포함되는 패턴

  [abc] -> 문자 클래스 -> a,b,c 문자 각각 중에 한개
  [0-9] -> -는 범위를 나타냄(0123456789) -> 숫자인 것
            ++++++++++++++++++++++++
  [a-z] -> abcd...z
  [A-Z] -> ABCD...Z
  [a-zA-Z0-9] -> 이것도 가능

  [^a-z] -> a~z가 아닌 문자. ^ -> 부정(반대) ←어디에 쓰이냐에 따라 뜻이 다름→ 문자클래스[] 외부에서 ^ -> 시작하는 문자

      예)입력 받은 데이터가 반드시 숫자인 경우
        -> 숫자가 아닌 문자가 있는지

         +++++++++++++++++++
